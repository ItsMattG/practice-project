{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\practice-project\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport styles from \"./AddUser.module.css\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value;\n\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\"\n      });\n      return;\n    }\n\n    if (+enteredUserAge < 1) {\n      setError({\n        title: \"Invalid age\",\n        message: \"Please enter a valid age (> 0).\"\n      });\n      return;\n    }\n\n    props.onAddUser(enteredName, enteredUserAge);\n    nameInputRef;\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            ref: nameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age\",\n            children: \"Age (Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"age\",\n            type: \"number\",\n            ref: ageInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUser, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/React/practice-project/src/components/Users/AddUser.js"],"names":["useState","Fragment","useRef","Card","Button","styles","ErrorModal","AddUser","props","nameInputRef","ageInputRef","error","setError","addUserHandler","event","preventDefault","enteredName","current","value","enteredUserAge","trim","length","title","message","onAddUser","errorHandler","input"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,YAAY,GAAGP,MAAM,EAA3B;AACA,QAAMQ,WAAW,GAAGR,MAAM,EAA1B;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;;AAEA,QAAMa,cAAc,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,WAAW,GAAGP,YAAY,CAACQ,OAAb,CAAqBC,KAAzC;AACA,UAAMC,cAAc,GAAGT,WAAW,CAACO,OAAZ,CAAoBC,KAA3C;;AACA,QACIF,WAAW,CAACI,IAAZ,GAAmBC,MAAnB,KAA8B,CAA9B,IACAF,cAAc,CAACC,IAAf,GAAsBC,MAAtB,KAAiC,CAFrC,EAGE;AACET,MAAAA,QAAQ,CAAC;AACLU,QAAAA,KAAK,EAAE,eADF;AAELC,QAAAA,OAAO,EACH;AAHC,OAAD,CAAR;AAKA;AACH;;AACD,QAAI,CAACJ,cAAD,GAAkB,CAAtB,EAAyB;AACrBP,MAAAA,QAAQ,CAAC;AACLU,QAAAA,KAAK,EAAE,aADF;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIA;AACH;;AACDf,IAAAA,KAAK,CAACgB,SAAN,CAAgBR,WAAhB,EAA6BG,cAA7B;AACAV,IAAAA,YAAY;AACf,GAxBD;;AA0BA,QAAMgB,YAAY,GAAG,MAAM;AACvBb,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,QAAD;AAAA,eACKD,KAAK,iBACF,QAAC,UAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACW,KADjB;AAEI,MAAA,OAAO,EAAEX,KAAK,CAACY,OAFnB;AAGI,MAAA,SAAS,EAAEE;AAHf;AAAA;AAAA;AAAA;AAAA,YAFR,eAQI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEpB,MAAM,CAACqB,KAAxB;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEb,cAAhB;AAAA,+BACI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,UADP;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,GAAG,EAAEJ;AAHT;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAOI;AAAO,YAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAO,YAAA,EAAE,EAAC,KAAV;AAAgB,YAAA,IAAI,EAAC,QAArB;AAA8B,YAAA,GAAG,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA9DD;;GAAMH,O;;KAAAA,O;AAgEN,eAAeA,OAAf","sourcesContent":["import { useState, Fragment, useRef } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\nimport styles from \"./AddUser.module.css\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\n\r\nconst AddUser = (props) => {\r\n    const nameInputRef = useRef();\r\n    const ageInputRef = useRef();\r\n\r\n    const [error, setError] = useState();\r\n\r\n    const addUserHandler = (event) => {\r\n        event.preventDefault();\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredUserAge = ageInputRef.current.value;\r\n        if (\r\n            enteredName.trim().length === 0 ||\r\n            enteredUserAge.trim().length === 0\r\n        ) {\r\n            setError({\r\n                title: \"Invalid input\",\r\n                message:\r\n                    \"Please enter a valid name and age (non-empty values).\",\r\n            });\r\n            return;\r\n        }\r\n        if (+enteredUserAge < 1) {\r\n            setError({\r\n                title: \"Invalid age\",\r\n                message: \"Please enter a valid age (> 0).\",\r\n            });\r\n            return;\r\n        }\r\n        props.onAddUser(enteredName, enteredUserAge);\r\n        nameInputRef\r\n    };\r\n\r\n    const errorHandler = () => {\r\n        setError(null);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {error && (\r\n                <ErrorModal\r\n                    title={error.title}\r\n                    message={error.message}\r\n                    onConfirm={errorHandler}\r\n                />\r\n            )}\r\n            <Card className={styles.input}>\r\n                <form onSubmit={addUserHandler}>\r\n                    <div>\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            id=\"username\"\r\n                            type=\"text\"\r\n                            ref={nameInputRef}\r\n                        ></input>\r\n                        <label htmlFor=\"age\">Age (Years)</label>\r\n                        <input id=\"age\" type=\"number\" ref={ageInputRef}></input>\r\n                        <Button type=\"submit\">Add User</Button>\r\n                    </div>\r\n                </form>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AddUser;\r\n"]},"metadata":{},"sourceType":"module"}